apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  creationTimestamp: '2020-11-17T12:45:13Z'
  generation: 4
  managedFields:
    - apiVersion: tekton.dev/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          .: {}
          'f:params': {}
      manager: oc
      operation: Update
      time: '2020-11-17T12:45:13Z'
    - apiVersion: tekton.dev/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:tasks': {}
          'f:workspaces': {}
      manager: Mozilla
      operation: Update
      time: '2020-11-18T09:23:44Z'
  name: build-and-deploy-spring-mvc
  namespace: pipelines-tutorial
  resourceVersion: '605819'
  selfLink: >-
    /apis/tekton.dev/v1beta1/namespaces/pipelines-tutorial/pipelines/build-and-deploy
  uid: 77e50c83-63d5-475c-a2bf-527bde2a0288
spec:
  params:
    - description: name of the deployment to be patched
      name: deployment-name
      type: string
    - description: url of the git repo for the code of deployment
      name: git-url
      type: string
    - default: master
      description: revision to be used from repo of the code for deployment
      name: git-revision
      type: string
    - description: image to be build from the code
      name: IMAGE
      type: string
  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: $(params.git-url)
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: revision
          value: $(params.git-revision)
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: maven-run
      params:
        - name: GOALS
          value:
            - '-DskipTests'
            - clean
            - package
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: source
          workspace: shared-workspace
    - name: build-image
      params:
        - name: TLSVERIFY
          value: 'false'
        - name: IMAGE
          value: $(params.IMAGE)
      runAfter:
        - maven-run
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: apply-manifests
      runAfter:
        - build-image
      taskRef:
        kind: Task
        name: apply-manifests
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: update-deployment
      params:
        - name: deployment
          value: $(params.deployment-name)
        - name: IMAGE
          value: $(params.IMAGE)
      runAfter:
        - apply-manifests
      taskRef:
        kind: Task
        name: update-deployment
  workspaces:
    - name: shared-workspace
    - name: maven-settings
